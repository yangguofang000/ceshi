---- 类
1.1：Java类
    属性、方法、构造器  。 代码块、内部类
1.2：面向对象的特征 ：封装、继承、多态
1.3：关键词：this\super\package\import\static\final\interface\abstract 等


2.0:面向对象具体功能的操作三步骤：
a：创建类，设计类的内部成员（属性、方法）
b: 创建类对象 (实例化)，
c: 通过对象，调用其内部声名的属性和方法


对象在内存中的分配涉及到的内存结构

- 栈（stack）:方法内定义的变量，存储在栈中
- 堆（heap）:new 出来的结构（比如，数组实体、对象实体），包括对象中的属性
- 方法区（method area):存放类的模板

类中对象的内存解析

类的成员：
 - 属性：
    -- 角度一，按照数据类型划分，基本的数据类型（8种）、引用数据类型（数组、类、接口、枚举、注解、记录）
    -- 角度二，按照变量在类中的声名位置不同，成员变量、局部变量

成员变量  & 局部变量

1、在类中声名的位置不同
2、在内存中的分配位置不同，局部变量存在栈空间中、属性存储在堆空间中
3、生命周期不同
4、作用域不同
5、是否有权限修饰符进行修饰
    属性可以使用权限修饰符修饰
    局部变量不可以
 6、默认值
    属性都有默认值
    局部变量没有


类成员，方法（methhod)
1、格式：
权限修饰符 [其他修饰符] 返回值类型 方法名(形参列表)[throws 异常类型]{
    // 方法体
}
1.1：权限修饰符四种： public 、protected 、 缺省 、private    （权限依次递减）

1.2：返回值类型：（调用方法是否需要返回结果）
    -> 无返回值  ：void
    -> 有返回值  ：需要指明返回的数据类型（基本数据类型、引用数据类型）
1.3：形参列表（形参属于局部变量且可以声名多个）
 格式：(形参类型1 形参1 , 形参类型2 形参2 ,... )
 分类：
    无形参列表：不能省略() ,例如：Math.random() ,new Scanner(System.in).nextInt()

    有形参列表：根据方法调用时，需要的不确定的变量的类型和个数、确定形参类型和个数，例如：Arrays类中的binarySearch(),sort(),equals()方法


对象数组：
元素为引用数据类型时称为对象数组
eg:String[]、Person[]  等



方法重载（overload）：
同一个类中，多个相同方法，参数列表不同 ，方法彼此之间构成重载
判断两个方法的是否相同：方法名相同、且形参列表相同（形参个数、类型、位置都相同）


可变个数形参：
    调用方法时，会有参数类型确定，个数不确定得场景，需要可变形参
格式：（参数类型 ... 参数名）
说明：  st(int ... num)   和st(int[] num)  这种不构成重载
可变形参必须放在参数最后










